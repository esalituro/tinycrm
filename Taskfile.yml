version: "3"

tasks:
  act-container:
    desc: "Run act inside a Linux container"
    cmds:
      - docker run --rm -it -v $(pwd):/workspace -v /Users/$USER/.docker/run/docker.sock:/var/run/docker.sock -w /workspace python:3.10 /bin/bash  -c "
        apt update &&
        apt install -y curl nodejs npm &&
        curl -sSL https://raw.githubusercontent.com/nektos/act/master/install.sh | bash &&
        ./bin/act --env ACT_DISABLE_COMMIT=true -P ubuntu-latest=ghcr.io/catthehacker/ubuntu:act-latest --container-architecture linux/amd64"

  act-container-bash:
    desc: "Run bash inside a Linux container"
    cmds:
      - docker run --rm -it -v $(pwd):/workspace -v /Users/$USER/.docker/run/docker.sock:/var/run/docker.sock -w /workspace python:3.10 /bin/bash  -c "
        apt update &&
        apt install -y curl &&
        curl -sSL https://raw.githubusercontent.com/nektos/act/master/install.sh | bash &&
        /bin/bash"
  
  pull:
    desc: "Pull the latest images for TinyCRM"
    cmds:
      - docker compose pull

  clean-images:
    desc: "Remove unused Docker images"
    cmds:
      - docker image prune -af

  build:
    desc: "Build Docker images"
    cmds:
      - docker compose build

  up:
    desc: "Start TinyCRM containers"
    cmds:
      - docker compose up -d

  down:
    desc: "Stop TinyCRM containers"
    cmds:
      - docker compose down

  logs:
    desc: "View logs for backend"
    cmds:
      - docker logs tinycrm_backend

  clean:
    desc: "Remove all containers and volumes"
    cmds:
      - docker compose down -v

  rebuild:
    desc: "Fully clean, build, and restart TinyCRM"
    cmds:
      - task down
      - task clean
      - task build
      - task up

  format:
    desc: "Run Black to format code"
    cmds:
      - black backend frontend
  
  tox:
    desc: "Run tests using tox"
    cmds:
      - tox

  tox-clean:
    desc: "Recreate tox environments for a fresh test run"
    cmds:
      - tox --recreate